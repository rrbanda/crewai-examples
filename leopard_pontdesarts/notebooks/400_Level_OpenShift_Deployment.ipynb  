{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 📌 400-Level: Deploying CrewAI Agents on OpenShift\n",
    "\n",
    "This notebook provides step-by-step instructions to **deploy CrewAI agents** as a **FastAPI service** on OpenShift."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 🎯 Learning Objectives\n",
    "\n",
    "✔️ Deploy **CrewAI-based microservices** on OpenShift.\n",
    "✔️ Use **Kubernetes YAML manifests** to define deployments, services, and config maps.\n",
    "✔️ **Expose APIs** via OpenShift Route."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 🛠️ Prerequisites\n",
    "- **Access to an OpenShift cluster**\n",
    "- **OpenShift CLI (`oc`) installed**\n",
    "- **Container registry access** (e.g., Quay.io, OpenShift internal registry)"
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "outputs": [],
   "source": [
    "# ✅ Verify OpenShift CLI is installed\n",
    "!oc version"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 🔧 Step 1: Build and Push the Container Image"
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "outputs": [],
   "source": [
    "# ✅ Authenticate with OpenShift Registry\n",
    "!podman login -u $(oc whoami) -p $(oc whoami -t) quay.io"
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "outputs": [],
   "source": [
    "# ✅ Build and push container image\n",
    "!podman build -t quay.io/your_username/crewai-api:latest .\n",
    "!podman push quay.io/your_username/crewai-api:latest"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 📜 Step 2: Define Kubernetes YAML for OpenShift Deployment"
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "outputs": [],
   "source": [
    "# ✅ Create Deployment YAML\n",
    "deployment_yaml = '''\n",
    "apiVersion: apps/v1\n",
    "kind: Deployment\n",
    "metadata:\n",
    "  name: crewai-api\n",
    "spec:\n",
    "  replicas: 1\n",
    "  selector:\n",
    "    matchLabels:\n",
    "      app: crewai-api\n",
    "  template:\n",
    "    metadata:\n",
    "      labels:\n",
    "        app: crewai-api\n",
    "    spec:\n",
    "      containers:\n",
    "      - name: crewai-api\n",
    "        image: quay.io/your_username/crewai-api:latest\n",
    "        ports:\n",
    "        - containerPort: 8000\n",
    "        envFrom:\n",
    "        - configMapRef:\n",
    "            name: crewai-config\n",
    "''' \n",
    "with open('deployment.yaml', 'w') as f:\n",
    "    f.write(deployment_yaml)\n",
    "print(\"✅ Deployment YAML generated: deployment.yaml\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 🌍 Step 3: Create OpenShift Service & Route"
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "outputs": [],
   "source": [
    "# ✅ Create Service YAML\n",
    "service_yaml = '''\n",
    "apiVersion: v1\n",
    "kind: Service\n",
    "metadata:\n",
    "  name: crewai-service\n",
    "spec:\n",
    "  selector:\n",
    "    app: crewai-api\n",
    "  ports:\n",
    "    - protocol: TCP\n",
    "      port: 80\n",
    "      targetPort: 8000\n",
    "''' \n",
    "with open('service.yaml', 'w') as f:\n",
    "    f.write(service_yaml)\n",
    "print(\"✅ Service YAML generated: service.yaml\")"
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "outputs": [],
   "source": [
    "# ✅ Create Route YAML\n",
    "route_yaml = '''\n",
    "apiVersion: route.openshift.io/v1\n",
    "kind: Route\n",
    "metadata:\n",
    "  name: crewai-route\n",
    "spec:\n",
    "  to:\n",
    "    kind: Service\n",
    "    name: crewai-service\n",
    "  port:\n",
    "    targetPort: 8000\n",
    "  tls:\n",
    "    termination: edge\n",
    "''' \n",
    "with open('route.yaml', 'w') as f:\n",
    "    f.write(route_yaml)\n",
    "print(\"✅ Route YAML generated: route.yaml\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 🚀 Step 4: Deploy to OpenShift"
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "outputs": [],
   "source": [
    "# ✅ Apply OpenShift manifests\n",
    "!oc apply -f deployment.yaml\n",
    "!oc apply -f service.yaml\n",
    "!oc apply -f route.yaml"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 🎯 Summary\n",
    "\n",
    "✔️ Built and pushed **CrewAI API container** to OpenShift.\n",
    "✔️ Created **Deployment, Service, and Route YAMLs**.\n",
    "✔️ Deployed the **CrewAI service on OpenShift**.\n",
    "\n",
    "**🎉 Your CrewAI API is now accessible via the OpenShift Route!** 🚀"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "name": "python",
   "version": "3.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
